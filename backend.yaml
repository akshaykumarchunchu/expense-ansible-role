  - name: disable nodejs 
    ansible.builtin.command: dnf module disable nodejs -y
      
  - name: enable nodejs:20 -y
    ansible.builtin.command: dnf module enable nodejs:20 -y
      
  - name: install node js
    ansible.builtin.dnf: # Only works for Redhat Family
      name: nodejs
      state: latest

  - name: add user expense
    ansible.builtin.user:
      name: expense
      
  - name: create app directory 
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download the expense code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the file 
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  
  - name: install dependenices
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name: copy backend services
    ansible.builtin.template:
      src: backend.service
      dest: /etc/systemd/system/backend.service
      
  - name: install mysql server
    ansible.builtin.dnf:
      name: mysql-server
      state: latest

  - name: install python dependenices 
    ansible.builtin.pip:
      name:  
      - PyMySQL     # To connect to mysql server through ansible 
      - cryptography
      executable: pip3.9 # If python pip3.11 version then its 3.11

  - name: import the data into mysql
    name: check DB connections
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import 
      name: all

  - name: daemon reload service
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start services 
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes